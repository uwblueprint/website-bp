name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      
env:
  NEXT_PUBLIC_API_KEY: "${{ secrets.NEXT_PUBLIC_API_KEY }}"
  NEXT_PUBLIC_APP_ID: "${{ secrets.NEXT_PUBLIC_APP_ID }}"
  NEXT_PUBLIC_AUTH_DOMAIN: "${{ secrets.NEXT_PUBLIC_AUTH_DOMAIN }}"
  NEXT_PUBLIC_DATABASE_URL: "${{ secrets.NEXT_PUBLIC_DATABASE_URL }}"
  NEXT_PUBLIC_MEASUREMENT_ID: "${{ secrets.NEXT_PUBLIC_MEASUREMENT_ID }}"
  NEXT_PUBLIC_MESSAGING_SENDER_ID: "${{ secrets.NEXT_PUBLIC_MESSAGING_SENDER_ID }}"
  NEXT_PUBLIC_PROJECT_ID: "${{ secrets.NEXT_PUBLIC_PROJECT_ID }}"
  NEXT_PUBLIC_STORAGE_BUCKET: "${{ secrets.NEXT_PUBLIC_STORAGE_BUCKET }}"

jobs:
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Setup node env
        uses: actions/setup-node@v2.1.2
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn

      - name: Run prettier
        run: yarn prettier

      - name: Run lint
        run: yarn lint

      - name: Build
        run: yarn build
